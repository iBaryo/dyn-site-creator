{
  "config": [
    {
      "browserContainerId": "cool-id",
      "apiName": "cool-api"
    }
  ],
  "code": [
    {
      "desc": "sanity test",
      "code": "() => console.log('hello world')"
    },
    {
      "type": "server",
      "desc": "async initializing app",
      "code": "(app) => new Promise(r => setTimeout(() => {app.tools = {isOk: true}; r();}, 0))"
    },
    {
      "type": "endpoint",
      "name": "myEndpoint",
      "desc": "test endpoint",
      "code": "(req) => ({ isOk: this.context.app.tools.isOk, query: req.query })"
    },
    {
      "type": "html",
      "name": "myPage.html",
      "desc": "test html page",
      "head": [
        {
          "desc": "sanity frontend test",
          "code": "<title>test page</title>"
        },
        {
          "desc": "css",
          "code": "<style>textarea { height: 100px; }</style>"
        },
        {
          "type": "script",
          "desc": "test script by function",
          "code": "(req, config) => `console.log('hello browser');`"
        }
      ],
      "body": [
        {
          "type": "dom",
          "desc": "test dom",
          "code": "<div>hello world</div>"
        },
        {
          "type": "dom",
          "desc": "test dom by function",
          "code": "(req, config) => `<div>endpoint result:</div><textarea id=\"${config.browserContainerId}\">loading...</textarea>`"
        },
        {
          "type": "script",
          "desc": "loading data to script",
          "code": "fetch(`myEndpoint${location.search}`).then(r => r.json())\n.then(r => JSON.stringify(r,undefined,4))\n.then(r => document.getElementById(window.config.browserContainerId).innerText = r);"
        },
        {
          "type": "custom-script",
          "desc": "custom frontend script",
          "code": "(config) => { window[config.apiName] = {isOk: true} }"
        },
        {
          "type": "my-script",
          "desc": "my frontend script",
          "code": "async (config, myApi) => myApi.isCustom = true"
        }
      ]
    }
  ]
}