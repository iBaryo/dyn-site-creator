{
  "config": [
    {
      "browserContainerId": "cool-id",
      "apiName": "cool-api"
    }
  ],
  "code": [
    {
      "desc": "sanity test",
      "code": "() => console.log('hello world')"
    },
    {
      "type": "server",
      "desc": "async initializing app",
      "code": "(app) => new Promise(r => setTimeout(() => {app.tools = {isOk: true}; r();}, 0))"
    },
    {
      "type": "endpoint",
      "name": "myEndpoint",
      "desc": "test endpoint",
      "code": "(req) => ({ isOk: this.context.app.tools.isOk, query: req.query })"
    },
    {
      "type": "html",
      "name": "myPage.html",
      "desc": "test html page",
      "head": [
        {
          "desc": "sanity frontend test",
          "code": "<title id=\"my-title\">test page</title>",
          "ext-assert": "document.querySelector('title#my-title').innerText == 'test page'"
        },
        {
          "desc": "test css",
          "code": "<style id=\"my-style\">textarea { height: 100px; } #results .true { color: green; } #results .false { color: red;}</style>",
          "ext-assert": "!!document.querySelector('style#my-style')"
        },
        {
          "type": "script",
          "desc": "test script by function",
          "code": "(req, config) => `window.testResults = {}`",
          "ext-assert": "!!window.testResults"
        }
      ],
      "body": [
        {
          "type": "test-section",
          "desc": "a custom test section for asserting other nodes (with ext-assert property)"
        },
        {
          "type": "dom",
          "desc": "test dom",
          "code": "<div id=\"dom-test\">hello world</div>",
          "ext-assert": "document.querySelector('div#dom-test').innerText == 'hello world'"
        },
        {
          "type": "dom",
          "desc": "test dom by function",
          "code": "(req, config) => `<div>endpoint result:</div><textarea id=\"${config.browserContainerId}\">loading...</textarea>`",
          "ext-assert": "!!document.querySelector(`#${config.browserContainerId}`)"
        },
        {
          "type": "script",
          "desc": "test endpoint",
          "code": "fetch(`myEndpoint${location.search}`).then(r => r.json())\n.then(r => window.testResults.myEndpointResult = r)\n.then(r => JSON.stringify(r,undefined,4))\n.then(r => document.getElementById(window.config.browserContainerId).innerText = r);",
          "ext-assert": "window.testResults.myEndpointResult.isOk"
        },
        {
          "type": "scoped-script",
          "desc": "scoped frontend script",
          "code": "(config) => { window[config.apiName] = {isOk: true} }",
          "ext-assert": "window[config.apiName].isOk"
        },
        {
          "type": "my-script",
          "desc": "my frontend script",
          "code": "async (config, myApi) => myApi.isCustom = true",
          "ext-assert": "window[config.apiName].isCustom"
        }
      ]
    },
    {
      "type": "my-feature",
      "desc": "test for a custom feature",
      "ext-assert": "window.testResults.featureEndpointResult.myFeature"
    }
  ]
}